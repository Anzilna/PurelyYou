<%- include("partials/header"); -%>

<div class="flex flex-col min-h-screen">

  <div class="flex flex-grow">

    <!-- Left Section -->
    <div class="flex flex-col w-full md:w-1/2 flex-grow">
      <div class="flex h-[20%] justify-center items-center pt-12 md:justify-start md:pl-12">
        <a href="#" class=" pb-2 text-2xl font-bold text-gray-900">PurelyYou.</a>
      </div>
      
      
      <div class="flex flex-col justify-center items-center flex-grow lg:w-[28rem] mx-auto md:px-6">
        <p class="text-left text-3xl font-bold">Change your password</p>
        <p class="mt-2 text-left text-gray-500">please enter your newpassword.</p>
      
      
        <div class="relative mt-8 flex h-px place-items-center bg-gray-200">
        </div>
        <form class="flex flex-col pt-3 md:pt-8 w-full">
          
          <div class="flex flex-col pt-4">
            <div class="password error text-red-500 " id="error-password"></div>
            <div class="relative flex overflow-hidden border-b-2 focus-within:border-b-gray-500 transition">
              <input 
                type="password" 
                id="login-password" 
                class="w-full flex-1 appearance-none border-gray-300 bg-white px-4 py-2 text-base text-gray-700 placeholder-gray-400 focus:outline-none" 
                placeholder="Password" 
              />
              <button 
                type="button" 
                id="toggle-password-visibility" 
                class="absolute right-2 top-1/2 -translate-y-1/2 text-gray-500 hover:text-gray-800 focus:outline-none"
              >
                <i class="bi bi-eye-slash"></i>
              </button>
            </div>
          </div>
          
          <div class="flex flex-col pt-4">
            <div class="password error text-red-500 " id="error-password-confirm"></div>
            <div class="relative flex overflow-hidden border-b-2 focus-within:border-b-gray-500 transition">
              <input 
                type="password" 
                id="login-password-confirm" 
                class="w-full flex-1 appearance-none border-gray-300 bg-white px-4 py-2 text-base text-gray-700 placeholder-gray-400 focus:outline-none" 
                placeholder="Confirm Password" 
              />
              <button 
                type="button" 
                id="toggle-confirm-password-visibility" 
                class="absolute right-2 top-1/2 -translate-y-1/2 text-gray-500 hover:text-gray-800 focus:outline-none"
              >
                <i class="bi bi-eye-slash"></i>
              </button>
            </div>
          </div>
        
          <button id="submit-btn" type="submit" class="w-auto my-3 relative rounded-lg bg-gray-900 px-4 py-2 flex justify-center items-center text-base font-semibold text-white shadow-md ring-gray-500 ring-offset-2 transition focus:ring-2">
            <span id="button-text" class="block">Submit</span>
          </button>
        </form>
        <div class="py-12 text-center">
          <p class="whitespace-nowrap text-gray-600">
            Already have an account?
            <a href="/login" class="underline-offset-4 font-semibold text-gray-900 underline">Log in now.</a>
          </p>
        </div>
      </div>
    </div>

    <div class="pointer-events-non  relative hidden w-1/2 min-h-screen select-none bg-black md:block">
      <div class="absolute bottom-0 z-10 px-8 text-black opacity-100">
        <p class="mb-8 text-3xl font-semibold leading-10">We work 10x faster than our competitors and stay consistent. While they're bogged down with technical debt, we're releasing new features.</p>
        
      </div>
      <img class="absolute top-0 h-full w-full object-cover opacity-90" src="/images/frizzfree.jpg" alt="Background" />
    </div>
  </div>
  <script>
    const form = document.querySelector('form');
    const passwordInput = document.getElementById('login-password');
    const confirmPasswordInput = document.getElementById('login-password-confirm');
    const buttonText = document.getElementById('button-text');
    
    const errorName = document.getElementById('error-name');
    const errorEmail = document.getElementById('error-email');
    const errorPassword = document.getElementById('error-password');
    const errorConfirmPassword = document.getElementById('error-password-confirm');
  
    const togglePasswordVisibility = document.getElementById('toggle-password-visibility');
const toggleConfirmPasswordVisibility = document.getElementById('toggle-confirm-password-visibility');

const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    const passwordPattern = /^(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
  

togglePasswordVisibility.addEventListener('click', () => {
  const isPasswordVisible = passwordInput.type === 'text';
  passwordInput.type = isPasswordVisible ? 'password' : 'text';

  const icon = togglePasswordVisibility.querySelector('i');
  icon.classList.toggle('bi-eye-slash', isPasswordVisible);
  icon.classList.toggle('bi-eye', !isPasswordVisible);
});

toggleConfirmPasswordVisibility.addEventListener('click', () => {
  const isPasswordVisible = confirmPasswordInput.type === 'text';
  confirmPasswordInput.type = isPasswordVisible ? 'password' : 'text';

  const icon = toggleConfirmPasswordVisibility.querySelector('i');
  icon.classList.toggle('bi-eye-slash', isPasswordVisible);
  icon.classList.toggle('bi-eye', !isPasswordVisible);
});
    
  
    const validatePassword = () => {
      const password = passwordInput.value.trim();
      if (!passwordPattern.test(password)) {
        errorPassword.textContent =
          'Password must be at least 8 characters, include an uppercase letter, a number, and a special character.';
        passwordInput.classList.add('border-red-500');
        return false;
      }
      errorPassword.textContent = '';
      passwordInput.classList.remove('border-red-500');
      return true;
    };
  
    const validateConfirmPassword = () => {
      const password = passwordInput.value.trim();
      const confirmPassword = confirmPasswordInput.value.trim();
      if (password !== confirmPassword) {
        errorConfirmPassword.textContent = 'Passwords do not match.';
        confirmPasswordInput.classList.add('border-red-500');
        return false;
      }
      errorConfirmPassword.textContent = '';
      confirmPasswordInput.classList.remove('border-red-500');
      return true;
    };
  
    // Real-time validation
    passwordInput.addEventListener('input', validatePassword);
    confirmPasswordInput.addEventListener('input', validateConfirmPassword);
  
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
  
      const isPasswordValid = validatePassword();
      const isConfirmPasswordValid = validateConfirmPassword();
  
      if ( isPasswordValid && isConfirmPasswordValid) {
        try {
          const result = await fetch('/newpassword', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              password: passwordInput.value.trim(),
            }),
          });
  
          const fetchResult = await result.json();
          console.log(fetchResult);
  
          if (fetchResult.redirect) {
      
            location.assign('/login');
          
          } else if(fetchResult.message){
            errorEmail.textContent = fetchResult.message || '';
          }
        } catch (error) {
          console.log('An error occurred:', error);
        }
      }
    });
  </script>
  
  <%- include('partials/footer'); -%>

</div>
