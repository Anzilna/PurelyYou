<%- include("partials/header"); -%>
<body class="mt-[90px] bg-gray-50 font-roboto">
  <%- include("partials/navbar"); -%>
  <%- include("partials/headerForUserManagement"); -%>

  <div class="grid-cols-12 grid px-[250px] py-14 gap-3">
    <%- include("partials/sidebarForUserManagement"); -%>

    <div class="col-span-8">
      <div class="font-light items-start text-lg pb-[40px] flex justify-center">
        <p>You can manage your orders here</p>
      </div>

      <div class="flex bg-white gap-3 mb-5 p-3 justify-between">
<div class="justify-center flex">
  Orders
</div>

        <div>
          <button
          id="showAllOrders"
          class="px-2 text-xs py-1  text-black underline  "
        >
          Show All Orders
        </button>
        <button
          id="showPendingOrders"
          class="px-2 py-1 text-xs text-black underline  "
        >
          Show Pending Orders
        </button>
        </div>
        
      </div>

      <div class="grid grid-cols-12 gap-7">
        <div class="col-span-12">
          <div
            class="flex flex-col gap-3"
            id="orderslist"
            data-orders='<%- JSON.stringify(orders || []) %>'
          >
            <!-- Orders will be dynamically rendered here -->
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Script Section -->
  <script>
    // Render orders dynamically
    function renderOrders(orders) {
      const ordersList = document.getElementById("orderslist");

      if (!orders || orders.length === 0) {
        ordersList.innerHTML = `
          <div class="text-center text-gray-600">
            No orders found
          </div>`;
        return;
      }

      const ordersHTML = orders.map(order => `
        <div
          class="p-4 bg-white flex justify-between cursor-pointer"
          onclick="orderGet('${order._id}','${order.orderstatus}')"
        >
          <div class="flex flex-col gap-2">
            <div class="text-sm font-medium">${order.orderstatus}</div>
            <div class="text-xs">${order.items.length} items</div>
          </div>
          <div class="flex flex-col gap-2 text-xs">
            <div>${new Date(order.createdAt).toLocaleDateString()}</div>
            <div>Rs.${order.totalAmount}</div>
          </div>
          <div class="flex justify-center items-center">
            <i class="bi bi-chevron-right"></i>
          </div>
        </div>
      `).join("");

      ordersList.innerHTML = ordersHTML;
    }

    // Fetch orders from the dataset
    function getOrdersFromDataset() {
      const ordersList = document.getElementById("orderslist");
      return JSON.parse(ordersList.getAttribute("data-orders") || "[]");
    }

    // Filter orders based on status
    

    // Navigate to order details
    function orderGet(id,type) {
      location.assign(`/accountsettings/orderdetails/${id}?type=${type}`);
    }

    document.getElementById("showPendingOrders").addEventListener("click", async () => {
  try {
    const response = await fetch('/accountsettings/pendingorders'); 
    if (!response.ok) {
      throw new Error("Failed to fetch pending orders");
    }
    const data = await response.json();
    renderOrders(data.orders || []);
  } catch (error) {
    console.error("Error fetching pending orders:", error);
    renderOrders([]);
  }
});

    document.getElementById("showAllOrders").addEventListener("click", () => {
      const allOrders = getOrdersFromDataset();
      renderOrders(allOrders);
    });

    const allOrders = getOrdersFromDataset();
    renderOrders(allOrders);
  </script>

  <%- include('partials/footer'); -%>
</body>
