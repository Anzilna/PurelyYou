<%- include("partials/adminHeader"); -%>
<body class="bg-gray-100 font-sans text-gray-800">
  <%- include("partials/sidebar"); -%>
  <%- include("partials/Head"); -%>

  <div class="p-6 mt-3">
    <div class="max-w-5xl mx-auto bg-white rounded-lg shadow-md p-8">
      <h2 class="text-3xl font-semibold text-black mb-8 text-center">Add a New Offer</h2>
      <form class="space-y-6" id="offer-form">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-x-8 gap-y-6">
          <div>
            <label class="block text-sm font-medium text-black mb-1">Offer Name</label>
            <div class="error text-red-500 mb-1" id="error-offername"></div>
            <input
              type="text"
              name="offername"
              placeholder="Type offer name"
              class="w-full px-4 py-2 border border-gray-300 rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-black shadow-sm"
            />
          </div>

          <div>
            <label class="block text-sm font-medium text-black mb-1">Discount Percentage</label>
            <div class="error text-red-500 mb-1" id="error-discount"></div>
            <input
              type="number"
              name="discountPercentage"
              placeholder="Enter discount percentage"
              class="w-full px-4 py-2 border border-gray-300 rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-black shadow-sm"
            />
          </div>

          <div>
            <label class="block text-sm font-medium text-black mb-1">Start Date</label>
            <div class="error text-red-500 mb-1" id="error-startDate"></div>
            <input
              type="date"
              name="startDate"
              class="w-full px-4 py-2 border border-gray-300 rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-black shadow-sm"
            />
          </div>

          <div>
            <label class="block text-sm font-medium text-black mb-1">End Date</label>
            <div class="error text-red-500 mb-1" id="error-endDate"></div>
            <input
              type="date"
              name="endDate"
              class="w-full px-4 py-2 border border-gray-300 rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-black shadow-sm"
            />
          </div>

          <div class="col-span-1 md:col-span-2">
            <label class="block text-sm font-medium text-black mb-1">Eligibility Criteria</label>
            <div class="error text-red-500 mb-1" id="error-eligibilityCriteria"></div>
            <textarea
              name="eligibilityCriteria"
              placeholder="Describe eligibility criteria for the offer"
              rows="3"
              class="w-full px-4 py-2 border border-gray-300 rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-black shadow-sm"
            ></textarea>
          </div>

          <div class="col-span-1 md:col-span-2">
            <label class="block text-sm font-medium text-black mb-1">Description</label>
            <div class="error text-red-500 mb-1" id="error-description"></div>
            <textarea
              name="description"
              placeholder="Type description here"
              rows="3"
              class="w-full px-4 py-2 border border-gray-300 rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-black shadow-sm"
            ></textarea>
          </div>
        </div>

        <!-- Buttons -->
        <div class="flex justify-between items-center mt-6">
          <button
            type="button"
            class="px-6 py-2 text-black border border-black rounded-lg hover:bg-gray-100 focus:ring-2 focus:ring-gray-400"
            onclick="back()"
          >
            Cancel
          </button>
          <button
            type="submit"
            class="px-6 py-2 text-white bg-black rounded-lg shadow-md hover:bg-gray-800 focus:ring-2 focus:ring-black"
          >
            Create Offer
          </button>
        </div>
      </form>
    </div>
  </div>
  <script>
    const form = document.getElementById('offer-form');
    
    // Remove validation errors dynamically as the user types
    form.querySelectorAll('input, textarea').forEach((input) => {
      input.addEventListener('input', (e) => {
        const errorElement = document.getElementById(`error-${e.target.name}`);
        if (errorElement) {
          errorElement.textContent = ''; // Clear the error message
        }
      });
    });
    
    // Handle form submission
    form.addEventListener('submit', async (e) => {
      e.preventDefault();
    
      // Clear all previous error messages
      document.querySelectorAll('.error').forEach((el) => (el.textContent = ''));
    
      // Retrieve form data
      const offerName = form.offername.value.trim();  // Correct form field reference
      const discountPercentage = form.discountPercentage.value.trim();  // Correct form field reference
      const startDate = form.startDate.value;
      const endDate = form.endDate.value;
      const eligibilityCriteria = form.eligibilityCriteria.value.trim();
      const description = form.description.value.trim();
    
      let isValid = true;
    
      // Validate offer name
      if (!offerName) {
        document.getElementById('error-offername').textContent = 'Offer name is required.';
        isValid = false;
      }
    
      // Validate discount percentage
      if (!discountPercentage || isNaN(discountPercentage) || discountPercentage <= 0 || discountPercentage > 100) {
        document.getElementById('error-discount').textContent = 'Enter a valid discount percentage (1-100).';
        isValid = false;
      }
    
      // Validate start date
      if (!startDate) {
        document.getElementById('error-startDate').textContent = 'Start date is required.';
        isValid = false;
      }
    
      // Validate end date
      if (!endDate) {
        document.getElementById('error-endDate').textContent = 'End date is required.';
        isValid = false;
      } else if (new Date(startDate) >= new Date(endDate)) {
        document.getElementById('error-endDate').textContent = 'End date must be later than the start date.';
        isValid = false;
      }
    
      // Validate eligibility criteria
      if (!eligibilityCriteria) {
        document.getElementById('error-eligibilityCriteria').textContent = 'Eligibility criteria are required.';
        isValid = false;
      }
    
      // Validate description
      if (!description) {
        document.getElementById('error-description').textContent = 'Description is required.';
        isValid = false;
      }
    
      if (!isValid) {
        return;  // Stop if validation fails
      }
    
      // Convert FormData to a plain object
      const formData = new FormData(e.target);
      const formObject = {};
      formData.forEach((value, key) => {
        formObject[key] = value;
      });
    
      try {
        const response = await fetch('/admin/offers/addoffers', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(formObject), // Send plain object as JSON
        });
    
        const result = await response.json();
    
        if (result.saved) {
          location.assign('/admin/offers');
        } else if (result.errors) {
          Object.entries(result.errors).forEach(([key, error]) => {
            const errorElement = document.getElementById(`error-${key}`);
            if (errorElement) {
              errorElement.textContent = error;
            }
          });
        }
      } catch (err) {
        alert('Error while submitting the form. Please try again.');
      }
    });
    
    function back() {
      location.assign('/admin/offers');
    }
    </script>
    
</body>
</html>
