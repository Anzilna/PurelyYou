<%- include("partials/adminHeader"); -%>

<!-- Main Container -->
<%- include("partials/sidebar"); -%> <%- include("partials/head"); -%>

<!-- Main Content Area -->
<div class="p-6">
  <div class="h-auto flex flex-col">
    <div class="flex justify-between items-center mb-4">
      <h3 class="text-lg font-bold">Offers</h3>
      <a href="/admin/offers/addoffers">
        <button class="bg-black text-white py-2 px-3 rounded-md">
          Add Offers
        </button>
      </a>
    </div>

    <!-- Offers Table -->
    <div
      id="orders-container"
      class="overflow-hidden rounded-lg shadow-md max-h-[500px] overflow-y-auto"
    >
      <table class="table-auto w-full text-left border border-white">
        <thead class="bg-white">
          <tr>
            <th class="px-6 py-4">Offer Name</th>
            <th class="px-6 py-4">Discount</th>
            <th class="px-6 py-4">Start Date</th>
            <th class="px-6 py-4">End Date</th>
            <th class="px-6 py-4">Status</th>
            <th class="px-6 py-4 text-right">Action</th>
          </tr>
        </thead>
        <tbody class="divide-y divide-gray-300 border bg-white">
          <% offers.forEach(offer => { %>
          <tr 
            class="hover:bg-gray-100 min-h-[50px]" 
            style="cursor: pointer;" 
          >
            <td class="px-6 py-3"><%= offer.offerName %></td>
            <td class="px-6 py-3"><%= offer.discountPercentage %>%</td>
            <td class="px-6 py-3"><%= offer.startDateFormatted %></td>
            <td class="px-6 py-3"><%= offer.endDateFormatted %></td>
            <td class="px-6 py-3 <%= offer.status === 'Active' ? 'text-green-500' : 'text-red-500' %>">
              <%= offer.status %>
            </td>
            <td class="px-6 py-3 text-right">
              <a href='/admin/offers/editoffer/<%= offer._id.toString() %>'>
                <i class="bi bi-pencil"></i>
              </a>
              <button
                class="text-gray-600 hover:text-black mx-2"
                data-bs-toggle="modal"
                data-bs-target="#listProductModal"
                data-offer-id="<%= offer._id.toString() %>"
                data-status="<%= offer.status %>"
                data-category-id="<%= offer.category.id.toString() %>"
              >
                <i class="bi bi-card-checklist"></i>
                
              </button>
            </td>
          </tr>
          <% }) %>
        </tbody>
        
      </table>
    </div>
  </div>
</div>

<!-- Modal to edit offer status -->
<div
  class="modal fade"
  id="listProductModal"
  tabindex="-1"
  aria-labelledby="listProductModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="listProductModalLabel">
          Edit Offer Status
        </h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        <div class="error text-red-500 mb-1" id="error-select"></div>
        <select
          id="listingStatus"
          class="w-full py-2 px-2 border-1 rounded-md border-black"
        >
          <option value="" selected>Select an option</option>
          <option value="Active">Active</option>
          <option value="Inactive">Inactive</option>
        </select>
      </div>
      <div class="modal-footer">
        <button
          type="button"
          class="bg-white text-black border-1 border-black rounded-md py-2 px-3"
          data-bs-dismiss="modal"
        >
          Cancel
        </button>
        <button
          type="button"
          class="bg-black text-white border-1 border-black rounded-md py-2 px-3"
          id="confirmListButton"
        >
          Confirm
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  let offerIdToEdit = null;
  const listProductModal = document.getElementById("listProductModal");
  const confirmListButton = document.getElementById("confirmListButton");
  const errorSelect = document.getElementById("error-select");
  let categoryId = "";

  listProductModal.addEventListener("show.bs.modal", (event) => {
    const button = event.relatedTarget;
    const offerId = button.getAttribute("data-offer-id");
    categoryId = button.getAttribute("data-category-id");
    console.log(categoryId, "idd");

    const offerStatus = button.getAttribute("data-status");

    console.log("Offer IDoooo:", offerId);

    document.getElementById("listingStatus").value = offerStatus;
    offerIdToEdit = offerId;
    console.log("Offer ID:", offerIdToEdit);
  });

  confirmListButton.addEventListener("click", async () => {
    if (!offerIdToEdit) return;

    console.log(offerIdToEdit, "last idddddd", categoryId);

    const listingStatus = document.getElementById("listingStatus").value;
    if (!listingStatus) {
      errorSelect.textContent = "Please select a valid option.";
      return;
    }

    try {
      const fetchResult = await fetch(
        `/admin/offers/editoffer/${offerIdToEdit}`,
        {
          method: "PUT",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ status: listingStatus, categoryId }),
        }
      );

      const fetchResultJSON = await fetchResult.json();
      if (fetchResultJSON.updated) {
        location.reload();
      } else {
        showNotification(fetchResultJSON.message);
      }
    } catch (error) {
      console.error("Error updating offer status:", error);
      alert("An error occurred while updating the offer status.");
    }
  });

  function showNotification(message) {
    const notification = document.getElementById("notification");

    notification.className = "";

    notification.classList.add(
      "p-4",
      "mb-4",
      "text-sm",
      "rounded-lg",
      "fixed",
      "bottom-10",
      "right-4",
      "z-50",
      "min-w-[150px]",
      "text-white",
      "bg-black",
      "dark:bg-gray-800",
      "dark:text-green-400",
      "role",
      "alert"
    );

    notification.innerHTML = ` ${message}`;

    notification.classList.remove("hidden");

    setTimeout(() => {
      hideNotification();
    }, 5000);
  }

  function hideNotification() {
    const notification = document.getElementById("notification");
    notification.className = "hidden";
  }
</script>
</body>
</html>
