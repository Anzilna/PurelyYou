<!-- Main Container -->
<%- include("partials/adminHeader"); -%>
<%- include("partials/sidebar"); -%>
<%- include("partials/head"); -%>
<div class="p-6">
  <div class="h-auto flex flex-col">
    <div class="flex justify-between items-center mb-4">
      <h3 class="text-lg font-bold">Orders</h3>
    </div>

    <div id="fulltable" class="overflow-hidden rounded-lg shadow-md max-h-[500px] overflow-y-auto">
      <table class="table-auto w-full text-left border border-white">
        <thead class="bg-white">
          <tr>
            <th class="px-6 py-4">Name</th>
            <th class="px-6 py-4">Order Code</th>
            <th class="px-6 py-4">Status</th>
            <th class="px-6 py-4">Total Amount</th>
            <th class="px-6 py-4">Date</th>
            <th class="px-6 py-4 text-right">Action</th>
          </tr>
        </thead>
        <tbody id="ordersTableBody" class="divide-y divide-gray-300 border bg-white">
          <!-- Data will be injected here -->
        </tbody>
      </table>
    </div>

    <div id="noOrdersMessage" class="p-6 hidden">
      <p class="text-center text-gray-500">No Orders found.</p>
    </div>

   <!-- Pagination -->
<div
id="paginationContainer"
class="flex justify-end items-center space-x-4 p-4 fixed bottom-0 right-0 left-0 "
>
<!-- Previous Button -->
<button
  id="prevPageBtn"
  class="w-10 h-10 flex items-center justify-center rounded-full hover:text-gray-400 text-black disabled:opacity-50"
  disabled
>
  <span><i class="bi bi-chevron-left"></i></span>
</button>

<!-- Page Numbers -->
<div id="pageNumbers" class="flex space-x-2">
  <!-- Page numbers will be injected here -->
</div>

<!-- Next Button -->
<button
  id="nextPageBtn"
  class="w-10 h-10 flex items-center justify-center rounded-full hover:text-gray-400 text-black disabled:opacity-50"
  disabled
>
  <span><i class="bi bi-chevron-right"></i></span>
</button>
</div>
  </div>
</div>

<script> document.addEventListener("DOMContentLoaded", () => {
  const ordersTableBody = document.getElementById("ordersTableBody");
  const noOrdersMessage = document.getElementById("noOrdersMessage");
  const fulltable = document.getElementById("fulltable");
  const prevPageBtn = document.getElementById("prevPageBtn");
  const nextPageBtn = document.getElementById("nextPageBtn");
  const pageNumbers = document.getElementById("pageNumbers");

  let currentPage = 1;
  const limit = 6;
  let totalPages = 1;

  async function fetchOrders(page = 1) {
    try {
      const response = await fetch(`/admin/Orders/fetch?page=${page}&limit=${limit}`);
      const data = await response.json();

      // Clear table and page numbers
      ordersTableBody.innerHTML = "";
      pageNumbers.innerHTML = "";

      if (data.orders && data.orders.length > 0) {
        noOrdersMessage.classList.add("hidden");
        fulltable.classList.remove("hidden");

        data.orders.forEach((order) => {
          const row = document.createElement("tr");
          row.classList.add("hover:bg-gray-100", "min-h-[50px]", "cursor-pointer");
          row.setAttribute("onclick", `handleRowClick('${order._id}')`);
          row.innerHTML = `
            <td class="px-6 py-3">${order.username}</td>
            <td class="px-6 py-3">${order.code}</td>
            <td class="px-6 py-3">${order.orderstatus}</td>
            <td class="px-6 py-3">Rs. ${order.totalAmount}</td>
            <td class="px-6 py-3">${new Date(order.updatedAt).toLocaleString()}</td>
            <td class="px-6 py-3 text-right">
              <button
                class="text-gray-600 hover:text-black mx-2"
                data-bs-toggle="modal"
                data-bs-target="#listProductModal"
                data-order-id="${order._id}">
                <i class="bi bi-card-checklist"></i>
              </button>
            </td>
          `;
          ordersTableBody.appendChild(row);
        });

        totalPages = data.totalPages;
        renderPageNumbers();

        prevPageBtn.disabled = data.currentPage === 1;
        nextPageBtn.disabled = !data.hasNextPage;
      } else {
        noOrdersMessage.classList.remove("hidden");
        fulltable.classList.add("hidden");
      }
    } catch (error) {
      console.error("Error fetching orders:", error);
      noOrdersMessage.classList.remove("hidden");
      fulltable.classList.add("hidden");
    }
  }

  function renderPageNumbers() {
    for (let i = 1; i <= totalPages; i++) {
      const pageButton = document.createElement("button");
      pageButton.textContent = i;
      pageButton.className = `w-10 h-10 flex items-center justify-center rounded-full ${
        i === currentPage ? "bg-black text-white border-2 border-black" : "text-black hover:bg-gray-200"
      }`;
      pageButton.addEventListener("click", () => {
        currentPage = i;
        fetchOrders(currentPage);
      });
      pageNumbers.appendChild(pageButton);
    }
  }

  // Event listeners for pagination buttons
  prevPageBtn.addEventListener("click", () => {
    if (currentPage > 1) {
      currentPage--;
      fetchOrders(currentPage);
    }
  });

  nextPageBtn.addEventListener("click", () => {
    if (currentPage < totalPages) {
      currentPage++;
      fetchOrders(currentPage);
    }
  });

  fetchOrders(currentPage);
});

function handleRowClick(orderId) {
  console.log("Row clicked! Order ID:", orderId);
  location.assign(`/admin/orders/orderdetails/${orderId}`);
}
</script>
  
</body>
  
</html>
